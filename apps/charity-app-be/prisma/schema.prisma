// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/@prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Organisation {
  id              String         @id @default(uuid())
  name            String
  description     String
  suggestedAmount Float // instead of "price"
  image           String
  stripePriceId   String
  isFeatured      Boolean        @default(false)
  donationItems   DonationItem[]
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
}

model Donation {
  id          String         @id @default(uuid())
  donorId     String? // Firebase UID (optional for guest orders)
  status      DonationStatus @default(PAYMENT_REQUIRED)
  totalAmount Float
  paymentId   String?
  items       DonationItem[]
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
}

model DonationItem {
  id             String       @id @default(uuid())
  donationId     String
  organisationId String
  quantity       Int
  amount         Float // instead of "price"
  donation       Donation     @relation(fields: [donationId], references: [id], onDelete: Cascade)
  Organisation   Organisation @relation(fields: [organisationId], references: [id])
}

enum DonationStatus {
  PENDING
  PROCESSING
  COMPLETED
  PAYMENT_REQUIRED
}
